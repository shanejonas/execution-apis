Block:
  title: Block object
  type: object
  required:
    - parentHash
    - sha3Uncles
    - miner
    - stateRoot
    - transactionsRoot
    - receiptsRoot
    - logsBloom
    - number
    - gasLimit
    - gasUsed
    - timestamp
    - extraData
    - mixHash
    - nonce
    - size
    - transactions
    - uncles
  properties:
    parentHash:
      title: Parent block hash
      $ref: '#/components/schemas/hash32'
    sha3Uncles:
      title: Ommers hash
      $ref: '#/components/schemas/hash32'
    miner:
      title: Coinbase
      $ref: '#/components/schemas/address'
    stateRoot:
      $ref: '#/components/schemas/StateRoot'
    transactionsRoot:
      title: Transactions root
      $ref: '#/components/schemas/hash32'
    receiptsRoot:
      title: Receipts root
      $ref: '#/components/schemas/hash32'
    logsBloom:
      title: Bloom filter
      $ref: '#/components/schemas/bytes256'
    difficulty:
      $ref: '#/components/schemas/Difficulty'
    number:
      title: Number
      $ref: '#/components/schemas/uint'
    gasLimit:
      $ref: '#/components/schemas/GasLimit'
    gasUsed:
      $ref: '#/components/schemas/GasUsed'
    timestamp:
      title: Timestamp
      $ref: '#/components/schemas/uint'
    extraData:
      title: Extra data
      $ref: '#/components/schemas/bytes'
    mixHash:
      title: Mix hash
      $ref: '#/components/schemas/hash32'
    nonce:
      $ref: '#/components/schemas/Nonce'
    totalDifficulty:
      title: Total difficulty
      $ref: '#/components/schemas/uint'
    baseFeePerGas:
      title: Base fee per gas
      $ref: '#/components/schemas/uint'
    size:
      title: Block size
      $ref: '#/components/schemas/uint'
    transactions:
      anyOf:
        - title: Transaction hashes
          type: array
          items:
            $ref: '#/components/schemas/hash32'
        - title: Full transactions
          type: array
          items:
            $ref: '#/components/schemas/TransactionSigned'
    uncles:
      title: Uncles
      type: array
      items:
        $ref: '#/components/schemas/hash32'
BlockTag:
  title: Block tag
  type: string
  enum:
    - earliest
    - finalized
    - safe
    - latest
    - pending
  description: '`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error'
BlockNumberOrTag:
  title: Block number or tag
  oneOf:
    - $ref: '#/components/schemas/BlockNumber'
    - $ref: '#/components/schemas/BlockTag'
BlockNumberOrTagOrHash:
  title: Block number, tag, or block hash
  anyOf:
    - $ref: '#/components/schemas/BlockNumber'
    - $ref: '#/components/schemas/BlockTag'
    - title: Block hash
      $ref: '#/components/schemas/hash32'
BadBlock:
  title: Bad block
  type: object
  required:
    - block
    - hash
    - rlp
  properties:
    block:
      title: Block
      $ref: '#/components/schemas/bytes'
    hash:
      title: Hash
      $ref: '#/components/schemas/hash32'
    rlp:
      title: RLP
      $ref: '#/components/schemas/bytes'
Difficulty:
  title: Difficulty
  $ref: '#/components/schemas/bytes'
GasUsed:
  title: Gas used
  description: The amount of gas used for this specific transaction alone.
  $ref: '#/components/schemas/uint'
StateRoot:
  title: State root
  $ref: '#/components/schemas/hash32'
